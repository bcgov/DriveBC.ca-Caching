{{- $deploymentTag := .Values.image.tag | default .Chart.AppVersion -}}
{{- $deploymentTime := now | date "2006-01-02 15:04:05.000000" -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "app.fullname" . }}
  labels: {{ include "app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{ include "app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{ include "app.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - resources:
            limits:
              cpu: {{ .Values.deployment.resources.limits.cpu  }}
              memory: {{ .Values.deployment.resources.limits.memory  }}
            requests:
              cpu: {{ .Values.deployment.resources.requests.cpu  }}
              memory: {{ .Values.deployment.resources.requests.memory  }}
          env:
            - name: DEPLOYMENT_TAG
              value: {{ $deploymentTag | quote }}
            - name: DEPLOYMENT_TIME
              value: {{ $deploymentTime | quote }}
            - name: DRIVEBC_IMAGE_BASE_URL
              value: {{ .Values.deployment.env.DRIVEBC_IMAGE_BASE_URL  }}
          name: {{ include "app.fullname" . }}
          ports:
            - containerPort: 8080
              protocol: TCP
          imagePullPolicy: IfNotPresent
          image: {{ .Values.image.repository  }}:{{ .Values.image.tag  }}
        {{ if .Values.monitoring.enabled }}
        - resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          name: nginx-exporter
          ports:
            - containerPort: 9113
              protocol: TCP
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: File
          image: 'nginx/nginx-prometheus-exporter:0.11.0'
          securityContext:
            runAsGroup: 30001
            seccompProfile:
              type: 'RuntimeDefault'
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
              add:
                - NET_BIND_SERVICE
          args:
            - '-nginx.scrape-uri=http://localhost:8080/stub_status'
        {{- end }}  
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: "app.kubernetes.io/instance"
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: {{ template "app.name" . }}