#This will build, push to github packages (with the version tag) and then deploy to OpenShift
#This flow requires you to select a tag when you run it, otherwise it will fail.
name: 2b. Build & Deploy to Tst

on:
  workflow_dispatch: 

env:
    IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
    REGISTRY_USER: ${{ github.actor }}
    REGISTRY_PASSWORD: ${{ github.token }}

jobs:
  branchCheck: #may not be needed if we only have it setup to run automatically
    runs-on: ubuntu-latest
    steps:
      - name: Fail on branches
        run: exit 1
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}

  build-pre:
    needs: [branchCheck]
    runs-on: ubuntu-latest
    timeout-minutes: 1
    outputs:
      tag: ${{ steps.vars.outputs.tag }}

    steps:
    - name: Remove v from version for the docker tag
      id: vars
      run: |
        vtag=${{ github.ref_name }}
        echo "tag=${vtag//v}" >> $GITHUB_OUTPUT
  buildCachingImage:
    needs: [branchCheck, build-pre]
    runs-on: ubuntu-latest
    name: Build & Push Caching Image
    permissions:
      contents: read
      packages: write
    environment:
      name: tst
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.ref_name }}
      
    - name: Build nginx caching image
      id: build_image
      uses: redhat-actions/buildah-build@v2
      with:
        image: drivebc.ca-caching
        tags: latest latest-tst ${{ github.sha }} ${{ needs.build-pre.outputs.tag }}
        labels: |
          app=drivebc
        containerfiles: ./compose/caching/Dockerfile
    
    - name: Push to GitHub Images
      uses: redhat-actions/push-to-registry@v2
      with:
         image: ${{ steps.build_image.outputs.image }}
         tags: ${{ steps.build_image.outputs.tags }}
         registry: ${{ env.IMAGE_REGISTRY }}
         username: ${{ env.REGISTRY_USER }}
         password: ${{ env.REGISTRY_PASSWORD }}

  buildOpenShiftJobs:
    needs: [branchCheck, build-pre]
    runs-on: ubuntu-latest
    name: Build & Push OpenShift jobs image
    permissions:
      contents: read
      packages: write
    environment:
      name: tst
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.ref_name }}
      
    - name: Build OpenShift Jobs
      id: build_openshift_image
      uses: redhat-actions/buildah-build@v2
      with:
        context: .
        layers: true
        image: drivebc.ca-caching-openshiftjobs
        tags: latest latest-tst ${{ github.sha }} ${{ needs.build-pre.outputs.tag }}
        labels: |
          app=drivebc
        containerfiles: ./compose/openshiftjobs/DockerFile
    
    - name: Push to GitHub Images
      uses: redhat-actions/push-to-registry@v2
      with:
         image: ${{ steps.build_openshift_image.outputs.image }}
         tags: ${{ steps.build_openshift_image.outputs.tags }}
         registry: ${{ env.IMAGE_REGISTRY }}
         username: ${{ env.REGISTRY_USER }}
         password: ${{ env.REGISTRY_PASSWORD }}

  versionUpdate:
    needs: [buildCachingImage, buildOpenShiftJobs, build-pre]
    runs-on: ubuntu-latest
    name: Update the App Version in OpenShift
    environment:
      name: tst
      url: https://tst-drivebc-cache.apps.silver.devops.gov.bc.ca
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install CLI tools from OpenShift Mirror
      uses: redhat-actions/openshift-tools-installer@v1
      with:
        oc: "4"
      
    - name: Authenticate and set context
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
        openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
        namespace: ${{ env.OPENSHIFT_NAMESPACE }}
        insecure_skip_tls_verify: true

    - name: Update the version in OpenShift
      run: |
        helm upgrade tst-drivebc-cache -f ./helm/values-tst.yaml ./helm --set image.tag="${{ needs.build-pre.outputs.tag }}" --set cronjobs.tag="${{ needs.build-pre.outputs.tag }}"

