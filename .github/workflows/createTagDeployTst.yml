name: 2. Create Tag & Deploy to Tst

on:
  workflow_dispatch:
    inputs:
      tag:
        type: string
        description: Tag Version (incl. prefix; e.g. v1.2.3)
        required: true
      message:
        type: string
        description: Tag Message (e.g. Story Number)
        required: true

jobs:
  tag:
    if: startsWith(github.ref, 'refs/heads/') == true
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Create Tag
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
        git config commit.gpgsign false

        git tag -a ${{ github.event.inputs.tag }} -m "${{ github.event.inputs.message }}"
        git push origin ${{ github.event.inputs.tag }}

  build-pre:
    needs: [tag]
    runs-on: ubuntu-latest
    timeout-minutes: 1
    outputs:
      tag: ${{ steps.vars.outputs.tag }}

    steps:
    - name: Remove v from version for the docker tag
      id: vars
      run: |
        vtag=${{ github.event.inputs.tag }}
        echo "tag=${vtag//v}" >> $GITHUB_OUTPUT
  build:
    needs: [build-pre]
    runs-on: ubuntu-latest
    name: Build & Deploy Docker images
    permissions:
      contents: read
      packages: write
    environment:
      name: tst
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.ref_name }}
      
    - name: Build nginx caching image
      id: build_image
      uses: redhat-actions/buildah-build@v2
      with:
        image: drivebc.ca-caching
        tags: latest latest-tst ${{ github.sha }} ${{ needs.build-pre.outputs.tag }}
        labels: |
          app=drivebc
        containerfiles: ./compose/caching/Dockerfile
    
    - name: Push to GitHub Images
      uses: redhat-actions/push-to-registry@v2.7
      with:
         image: ${{ steps.build_image.outputs.image }}
         tags: ${{ steps.build_image.outputs.tags }}
         registry: ${{ env.IMAGE_REGISTRY }}
         username: ${{ env.REGISTRY_USER }}
         password: ${{ env.REGISTRY_PASSWORD }}

  versionUpdate:
    needs: [build, build-pre]
    runs-on: ubuntu-latest
    name: Update the App Version in OpenShift
    environment:
      name: tst
      url: https://tst-drivebc-cache.apps.silver.devops.gov.bc.ca
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Authenticate and set context
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
        openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
        namespace: ${{ env.OPENSHIFT_NAMESPACE }}
        insecure_skip_tls_verify: true

    - name: Update the version in OpenShift
      run: |
        helm upgrade tst-drivebc-cache -f ./helm/values-tst.yaml ./helm --set image.tag="${{ needs.build-pre.outputs.tag }}"